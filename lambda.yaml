Parameters:
  Env:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - sit
      - qat
      - cpv
      - prd
    Description: Enter Environment Name.
  SecurityGroupIdA:
    Type : String
    Default : sg-01ebc01d5e524ffef
    Description: Enter Security Group Id A apply to Lambdas
  SecurityGroupIdB:
    Type: String
    Default: sg-018837661cc24c0ca
    Description: Enter Security Group Id B to Lambdas
  LambdaRole:
    Type: String
    Default: S3DynamodbAccessRoleForLambda
    AllowedValues:
      - S3DynamodbAccessRoleForLambda
  S3KeyLambda:
    Type: String
    Default: HistLambda.zip
    Description: Enter the Key Name.
Mappings:
  Environments:
    dev :
      SubnetA : subnet-30adbc1e
      SubnetB: subnet-a0428eae
      SecurityGroupIdA: sg-01ebc01d5e524ffef
      SecurityGroupIdB: sg-018837661cc24c0ca
      deploymentBucket: edm-csd-datalake-dev
      LambdaRole: S3DynamodbAccessRoleForLambda
Resources:
  APV2HistoricalLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !FindInMap [Environments, !Ref Env , deploymentBucket]
        S3Key: HistLambda.zip
      Description : APV2 Historical Lambda
      Environment:
        Variables:
          STAGE : !Sub ${Env}
          logLevel : INFO
      FunctionName: !Sub historical-service-${Env}
      Handler: historical_service.lambda_handler
      MemorySize: 1024
      Role: arn:aws:iam::058704710491:role/S3DynamodbAccessRoleForLambda
      Runtime: python3.7
      Tags:
        - Key: Owner
          Value: eadm_log
        - Key: Application
          Value: eadm
      Timeout : 780
      VpcConfig:
        SecurityGroupIds:
          - !FindInMap [Environments, !Ref Env, SecurityGroupIdA]
        SubnetIds:
          - !FindInMap [Environments, !Ref Env, SubnetA]




